// Better configuration structure
params {
    // Input/Output
    input = null
    input_h5ad = null
    input_rds = null
    input_integrated = null
    output = "results"
    
    // Biological parameters
    batch = null
    label_key = null
    organism = null
    hvg = 2000
    
    // Method selection
    methods = "all"
    
    // Execution control
    run_preprocessing = true
    run_integration_py = true
    run_integration_r = true
    run_metrics = true
    
    // Resource defaults
    max_memory = '128.GB'
    max_cpus = 16
    max_time = '24.h'
}

// Conda configuration (NO hardcoded paths!)
conda {
    enabled = true
    useMamba = true
    createTimeout = '1 h'
    // Use relative paths from project directory
    cacheDir = "${params.output}/conda_cache"
}

// Process-specific resources
process {
    // Default resources
    cpus = 2
    memory = '8.GB'
    time = '2.h'
    
    withName: PREPROCESSING {
        cpus = 4
        memory = '16.GB'
        time = '4.h'
        conda = "${projectDir}/conda-envs/scib-cNMF-env.yml"
    }
    
    withName: INTEGRATION_PYTHON {
        cpus = 8
        memory = '32.GB'
        time = '8.h'
        conda = "${projectDir}/conda-envs/scib-cNMF-env.yml"
    }
    
    withName: INTEGRATION_R {
        cpus = 8
        memory = '32.GB'
        time = '8.h'
        conda = "${projectDir}/conda-envs/R-integration-env.yml"
    }
    
    withName: METRICS {
        cpus = 4
        memory = '16.GB'
        time = '2.h'
        conda = "${projectDir}/conda-envs/scib-metrics-env.yml"
    }
}

// Execution profiles for different environments
profiles {
    standard {
        process.executor = 'local'
    }
    
    slurm {
        process {
            executor = 'slurm'
            queue = 'normal'
            clusterOptions = '--qos=normal'
        }
    }
    
    sge {
        process {
            executor = 'sge'
            penv = 'smp'
            queue = 'all.q'
        }
    }
    
    docker {
        docker.enabled = true
        conda.enabled = false
    }
    
    singularity {
        singularity.enabled = true
        singularity.autoMounts = true
        conda.enabled = false
    }
}

// Reporting
timeline {
    enabled = true
    file = "${params.output}/pipeline_info/timeline.html"
}

report {
    enabled = true
    file = "${params.output}/pipeline_info/report.html"
}

trace {
    enabled = true
    file = "${params.output}/pipeline_info/trace.txt"
}

dag {
    enabled = true
    file = "${params.output}/pipeline_info/dag.html"
}